package com.hnieu.crtvn.entity;
// Generated 2019-2-23 22:25:06 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonBackReference;

/**
 * Teacher generated by hbm2java
 */
@Entity
@Table(name = "teacher", catalog = "crtvn", uniqueConstraints = @UniqueConstraint(columnNames = "code"))
public class Teacher implements java.io.Serializable {

	private Integer id;
	private Profession profession;
	private String code;
	private int status;
	private String name;
	private int gender;
	private String position;
	private String phone;
	private int age;
	private int mark;
	private Integer reserve1;
	private String reserve2;
	private Set<Examination> examinationsForTwotid = new HashSet<Examination>(0);
	private Set<Examination> examinationsForOnetid = new HashSet<Examination>(0);
	private Set<Teach> teaches = new HashSet<Teach>(0);
	private Set<Classs> classses = new HashSet<Classs>(0);

	public Teacher() {
	}

	public Teacher(Profession profession, String code, int status, String name, int gender, int age, int mark) {
		this.profession = profession;
		this.code = code;
		this.status = status;
		this.name = name;
		this.gender = gender;
		this.age = age;
		this.mark = mark;
	}

	public Teacher(Profession profession, String code, int status, String name, int gender, String position,
			String phone, int age, int mark, Integer reserve1, String reserve2, Set<Examination> examinationsForTwotid,
			Set<Examination> examinationsForOnetid, Set<Teach> teaches, Set<Classs> classses) {
		this.profession = profession;
		this.code = code;
		this.status = status;
		this.name = name;
		this.gender = gender;
		this.position = position;
		this.phone = phone;
		this.age = age;
		this.mark = mark;
		this.reserve1 = reserve1;
		this.reserve2 = reserve2;
		this.examinationsForTwotid = examinationsForTwotid;
		this.examinationsForOnetid = examinationsForOnetid;
		this.teaches = teaches;
		this.classses = classses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PID", nullable = false)
	public Profession getProfession() {
		return this.profession;
	}

	public void setProfession(Profession profession) {
		this.profession = profession;
	}

	@Column(name = "code", unique = true, nullable = false, length = 20)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "name", nullable = false, length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "gender", nullable = false)
	public int getGender() {
		return this.gender;
	}

	public void setGender(int gender) {
		this.gender = gender;
	}

	@Column(name = "position", length = 20)
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}

	@Column(name = "phone", length = 15)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "age", nullable = false)
	public int getAge() {
		return this.age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	@Column(name = "mark", nullable = false)
	public int getMark() {
		return this.mark;
	}

	public void setMark(int mark) {
		this.mark = mark;
	}

	@Column(name = "reserve1")
	public Integer getReserve1() {
		return this.reserve1;
	}

	public void setReserve1(Integer reserve1) {
		this.reserve1 = reserve1;
	}

	@Column(name = "reserve2", length = 50)
	public String getReserve2() {
		return this.reserve2;
	}

	public void setReserve2(String reserve2) {
		this.reserve2 = reserve2;
	}

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "teacherByTwotid")
	public Set<Examination> getExaminationsForTwotid() {
		return this.examinationsForTwotid;
	}

	public void setExaminationsForTwotid(Set<Examination> examinationsForTwotid) {
		this.examinationsForTwotid = examinationsForTwotid;
	}

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "teacherByOnetid")
	public Set<Examination> getExaminationsForOnetid() {
		return this.examinationsForOnetid;
	}

	public void setExaminationsForOnetid(Set<Examination> examinationsForOnetid) {
		this.examinationsForOnetid = examinationsForOnetid;
	}

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "teacher")
	public Set<Teach> getTeaches() {
		return this.teaches;
	}

	public void setTeaches(Set<Teach> teaches) {
		this.teaches = teaches;
	}

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "teacher")
	public Set<Classs> getClassses() {
		return this.classses;
	}

	public void setClassses(Set<Classs> classses) {
		this.classses = classses;
	}

}
