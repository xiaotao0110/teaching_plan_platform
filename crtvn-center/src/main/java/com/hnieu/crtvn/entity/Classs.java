package com.hnieu.crtvn.entity;
// Generated 2019-2-23 22:25:06 by Hibernate Tools 4.3.1.Final

import com.fasterxml.jackson.annotation.JsonBackReference;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Classs generated by hbm2java
 */
@Entity
@Table(name = "classs", catalog = "crtvn")
public class Classs implements java.io.Serializable {

	private Integer id;
	private Profession profession;
	private Teacher teacher;
	private String code;
	private int numbers;
	private Integer reserve1;
	private String reserve2;
	private Set<Exam> exams = new HashSet<Exam>(0);
	private Set<Student> students = new HashSet<Student>(0);
	private Set<Classselection> classselections = new HashSet<Classselection>(0);

	public Classs() {
	}

	public Classs(Profession profession, Teacher teacher, String code, int numbers) {
		this.profession = profession;
		this.teacher = teacher;
		this.code = code;
		this.numbers = numbers;
	}

	public Classs(Profession profession, Teacher teacher, String code, int numbers, Integer reserve1, String reserve2,
                  Set<Exam> exams, Set<Student> students, Set<Classselection> classselections) {
		this.profession = profession;
		this.teacher = teacher;
		this.code = code;
		this.numbers = numbers;
		this.reserve1 = reserve1;
		this.reserve2 = reserve2;
		this.exams = exams;
		this.students = students;
		this.classselections = classselections;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PID", nullable = false)
	public Profession getProfession() {
		return this.profession;
	}

	public void setProfession(Profession profession) {
		this.profession = profession;
	}

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TID", nullable = false)
	public Teacher getTeacher() {
		return this.teacher;
	}

	public void setTeacher(Teacher teacher) {
		this.teacher = teacher;
	}

	@Column(name = "code", nullable = false, length = 50)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "numbers", nullable = false)
	public int getNumbers() {
		return this.numbers;
	}

	public void setNumbers(int numbers) {
		this.numbers = numbers;
	}

	@Column(name = "reserve1")
	public Integer getReserve1() {
		return this.reserve1;
	}

	public void setReserve1(Integer reserve1) {
		this.reserve1 = reserve1;
	}

	@Column(name = "reserve2", length = 50)
	public String getReserve2() {
		return this.reserve2;
	}

	public void setReserve2(String reserve2) {
		this.reserve2 = reserve2;
	}

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classs")
	public Set<Exam> getExams() {
		return this.exams;
	}

	public void setExams(Set<Exam> exams) {
		this.exams = exams;
	}

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classs")
	public Set<Student> getStudents() {
		return this.students;
	}

	public void setStudents(Set<Student> students) {
		this.students = students;
	}

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classs")
	public Set<Classselection> getClassselections() {
		return this.classselections;
	}

	public void setClassselections(Set<Classselection> classselections) {
		this.classselections = classselections;
	}

}
