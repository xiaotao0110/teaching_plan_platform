<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hnieu.crtvn.dao.ClasssMapper">
  <resultMap id="BaseResultMap" type="com.hnieu.crtvn.entity.Classs">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="PID" jdbcType="INTEGER" property="pid" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="numbers" jdbcType="INTEGER" property="numbers" />
    <result column="TID" jdbcType="INTEGER" property="tid" />
    <result column="reserve1" jdbcType="INTEGER" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, PID, code, numbers, TID, reserve1, reserve2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hnieu.crtvn.entity.Classs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into classs (PID, code, numbers, 
      TID, reserve1, reserve2
      )
    values (#{pid,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{numbers,jdbcType=INTEGER}, 
      #{tid,jdbcType=INTEGER}, #{reserve1,jdbcType=INTEGER}, #{reserve2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hnieu.crtvn.entity.Classs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into classs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        PID,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="numbers != null">
        numbers,
      </if>
      <if test="tid != null">
        TID,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null">
        #{numbers,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=INTEGER},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hnieu.crtvn.entity.Classs">
    update classs
    <set>
      <if test="pid != null">
        PID = #{pid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null">
        numbers = #{numbers,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        TID = #{tid,jdbcType=INTEGER},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=INTEGER},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnieu.crtvn.entity.Classs">
    update classs
    set PID = #{pid,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      numbers = #{numbers,jdbcType=INTEGER},
      TID = #{tid,jdbcType=INTEGER},
      reserve1 = #{reserve1,jdbcType=INTEGER},
      reserve2 = #{reserve2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>