<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.dao.AcademicianMapper">
  <resultMap id="BaseResultMap" type="com.db.entity.Academician">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employeeNo" jdbcType="VARCHAR" property="employeeno" />
    <result column="CID" jdbcType="INTEGER" property="cid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="reserve1" jdbcType="INTEGER" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, employeeNo, CID, name, password, reserve1, reserve2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from academician
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from academician
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.db.entity.Academician">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into academician (employeeNo, CID, name, 
      password, reserve1, reserve2
      )
    values (#{employeeno,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{reserve1,jdbcType=INTEGER}, #{reserve2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.db.entity.Academician">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into academician
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeno != null">
        employeeNo,
      </if>
      <if test="cid != null">
        CID,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeno != null">
        #{employeeno,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=INTEGER},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.db.entity.Academician">
    update academician
    <set>
      <if test="employeeno != null">
        employeeNo = #{employeeno,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        CID = #{cid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=INTEGER},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.db.entity.Academician">
    update academician
    set employeeNo = #{employeeno,jdbcType=VARCHAR},
      CID = #{cid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      reserve1 = #{reserve1,jdbcType=INTEGER},
      reserve2 = #{reserve2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>